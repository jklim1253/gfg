#ifndef __ALG_SEARCH_HPP__
#define __ALG_SEARCH_HPP__

#include <vector>

namespace alg
{

////////////////////////////////////////////////////////////////////////////////
// search
// linear search
//
// v : randomized array
// value : target to search 
//
// return : if found, index of target value is located, or -1
////////////////////////////////////////////////////////////////////////////////
int search_linear(std::vector<int> const& v, int value);

////////////////////////////////////////////////////////////////////////////////
// search
// binary search
//
// v : sorted array
// value : target to search 
//
// return : if found, index of target value is located, or -1
////////////////////////////////////////////////////////////////////////////////
int search_binary(std::vector<int> const& v, int value);

////////////////////////////////////////////////////////////////////////////////
// search
// jump search
//
// v : sorted array
// value : target to search 
//
// return : if found, index of target value is located, or -1
////////////////////////////////////////////////////////////////////////////////
int search_jump(std::vector<int> const& v, int value);

} // namespace alg

#endif // __ALG_SEARCH_HPP__